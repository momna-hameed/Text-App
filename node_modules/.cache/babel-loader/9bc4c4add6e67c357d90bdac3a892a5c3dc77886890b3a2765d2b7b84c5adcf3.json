{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ICT\\\\myreactapp\\\\yourfirstapp\\\\src\\\\compponents\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const handleUpClick = () => {\n    // console.log(\"uppercase is clicked\" + {text} ) ;\n    let newText = text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Converted to Uppercase\", \"success\");\n  };\n  const handleLoClick = () => {\n    // console.log(\"lowercase is clicked\" + {text} ) ;\n    let newText = text.toLowerCase();\n    setText(newText);\n    props.showAlert(\"Converted to Lowercase\", \"success\");\n  };\n  const handleClearClick = () => {\n    // console.log(\"lowercase is clicked\" + {text} ) ;\n    let newText = \" \";\n    setText(newText);\n    props.showAlert(\"Screen cleared\", \"success\");\n  };\n  const handleReplace = () => {\n    // console.log(\"lowercase is clicked\" + {text} ) ;\n    let newText1 = prompt(\"enter text you want to replace\");\n    let newText2 = prompt(\"enter new text you want to replace with\");\n    let newText = text.replaceAll(newText1, newText2);\n    setText(newText);\n    props.showAlert(\"Replaced all occurances\", \"success\");\n  };\n  const handleCopy = () => {\n    // console.log(\"lowercase is clicked\" + {text} ) ;\n    let newText = document.getElementById(\"mb1\");\n    newText.select();\n    navigator.clipboard.writeText(newText.value);\n    props.showAlert(\"Copied \", \"success\");\n  };\n  const handleRemove = () => {\n    let newText = text.split(/[ ]+/);\n    setText(newText.join(\" \"));\n    props.showAlert(\"Removed extra spaces\", \"success\");\n  };\n  const handleOnChange = event => {\n    console.log(\"onchange\");\n    setText(event.target.value);\n  };\n  const [text, setText] = useState('');\n  //text STATE variable conatain enter text value fun is setText to update\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conatiner\",\n      style: {\n        color: props.mode === 'light' ? 'black' : 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [props.heading, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: handleOnChange,\n          id: \"mb1\",\n          rows: \"8\",\n          style: {\n            backgroundColor: props.mode === 'light' ? 'white' : 'grey' || 'red',\n            color: props.mode === 'light' ? 'black' : 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleUpClick,\n        children: \"Convert to uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleLoClick,\n        children: \"Convert to lowercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleClearClick,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleReplace,\n        children: \"Replace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleCopy,\n        children: \"Copy-Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleRemove,\n        children: \"Remove-Extra-Spaces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conatiner my-3\",\n      style: {\n        color: props.mode === 'light' ? 'black' : 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.split(\" \").length - 1, \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Words\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 35\n        }, this), \", \", text.length, \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Characters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 63\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Reading Time \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [0.008 * text.split(\" \").length - 1, \" Minute time\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Preview your Text \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text.length > 0 ? text : 'Write something in the box to preview'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n//situation of component content as avariable after performing actions updated  the state\n//hook:help you in using features of class without making class just import hook usestate from react\n//useState return settext\n_s(TextForm, \"Kt/yo4ZcRlSRxcmAcKAou8CnBS0=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","handleUpClick","newText","text","toUpperCase","setText","showAlert","handleLoClick","toLowerCase","handleClearClick","handleReplace","newText1","prompt","newText2","replaceAll","handleCopy","document","getElementById","select","navigator","clipboard","writeText","value","handleRemove","split","join","handleOnChange","event","console","log","target","children","className","style","color","mode","heading","fileName","_jsxFileName","lineNumber","columnNumber","onChange","id","rows","backgroundColor","onClick","length","_c","$RefreshReg$"],"sources":["C:/Users/ICT/myreactapp/yourfirstapp/src/compponents/TextForm.js"],"sourcesContent":["import React ,{useState} from 'react' \r\nexport default function TextForm(props) \r\n{\r\n    const handleUpClick=()=>\r\n    {\r\n    // console.log(\"uppercase is clicked\" + {text} ) ;\r\n     let newText=text.toUpperCase();\r\n     setText(newText)\r\n     props.showAlert(\"Converted to Uppercase\" , \"success\");\r\n    }\r\n  \r\n    const handleLoClick=()=>\r\n    {\r\n    // console.log(\"lowercase is clicked\" + {text} ) ;\r\n     let newText=text.toLowerCase();\r\n     setText(newText)  \r\n     props.showAlert(\"Converted to Lowercase\" , \"success\");\r\n    }\r\n    const handleClearClick=()=>\r\n    {\r\n    // console.log(\"lowercase is clicked\" + {text} ) ;\r\n     let newText=(\" \");\r\n     setText(newText)\r\n     props.showAlert(\"Screen cleared\" , \"success\");\r\n    }\r\n    const handleReplace=()=>\r\n    {\r\n    // console.log(\"lowercase is clicked\" + {text} ) ;\r\n     let newText1= prompt(\"enter text you want to replace\");\r\n     let newText2=prompt(\"enter new text you want to replace with\")\r\n     let newText= text.replaceAll( newText1,newText2);\r\n  \r\n     setText(newText)\r\n     props.showAlert(\"Replaced all occurances\" , \"success\");\r\n    }\r\n    const handleCopy=()=>\r\n    {\r\n    // console.log(\"lowercase is clicked\" + {text} ) ;\r\n     let newText = document.getElementById(\"mb1\");\r\n     newText.select();\r\n    navigator.clipboard.writeText(newText.value);\r\n    props.showAlert(\"Copied \" , \"success\");\r\n    }\r\n\r\n    const handleRemove=()=>\r\n    {\r\nlet newText=text.split(/[ ]+/);\r\nsetText(newText.join(\" \"))\r\nprops.showAlert(\"Removed extra spaces\" , \"success\");\r\n    }\r\n    const handleOnChange=(event)=>\r\n    {\r\n     console.log(\"onchange\")\r\n     setText(event.target.value)\r\n    }\r\n    const [text,setText]=useState('');\r\n    //text STATE variable conatain enter text value fun is setText to update\r\n\r\n  return (\r\n    <>\r\n\r\n  <div className=\"conatiner\" style={{color:props.mode==='light'? 'black' : 'white'} } >\r\n  <h2 >{props.heading} </h2>\r\n  \r\n\r\n  <div className=\"mb-3\">\r\n  <textarea className=\"form-control\"  value={text} onChange={handleOnChange} id=\"mb1\" rows=\"8\"style={{backgroundColor:props.mode==='light' ? 'white' : 'grey' ||'red', color:props.mode==='light'? 'black' : 'white' }} ></textarea>\r\n  </div>\r\n  <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to uppercase</button>\r\n  <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to lowercase</button>\r\n  <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear</button>\r\n  <button className=\"btn btn-primary mx-2\" onClick={handleReplace}>Replace</button>\r\n  <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy-Text</button>\r\n  <button className=\"btn btn-primary mx-2\" onClick={handleRemove}>Remove-Extra-Spaces</button>\r\n  </div>\r\n\r\n  <div className=\"conatiner my-3\" style={{color:props.mode==='light'? 'black' : 'white'}} >\r\n    <p>{text.split(\" \").length-1} <b>Words</b>, {text.length} <b>Characters</b></p>\r\n    <h3>Reading Time </h3>\r\n    <p>{0.008*text.split(\" \").length-1} Minute time</p>\r\n    <h3>Preview your Text </h3>\r\n    <p>{text.length>0 ? text : 'Write something in the box to preview'}</p>\r\n    </div>\r\n\r\n \r\n \r\n   </>\r\n  )\r\n}\r\n//situation of component content as avariable after performing actions updated  the state\r\n//hook:help you in using features of class without making class just import hook usestate from react\r\n//useState return settext"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}