{"ast":null,"code":"import _slicedToArray from\"C:/Users/ICT/myreactapp/yourfirstapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function TextForm(props){var handleUpClick=function handleUpClick(){// console.log(\"uppercase is clicked\" + {text} ) ;\nvar newText=text.toUpperCase();setText(newText);props.showAlert(\"Converted to Uppercase\",\"success\");};var handleLoClick=function handleLoClick(){// console.log(\"lowercase is clicked\" + {text} ) ;\nvar newText=text.toLowerCase();setText(newText);props.showAlert(\"Converted to Lowercase\",\"success\");};var handleClearClick=function handleClearClick(){// console.log(\"lowercase is clicked\" + {text} ) ;\nvar newText=\" \";setText(newText);props.showAlert(\"Screen cleared\",\"success\");};var handleReplace=function handleReplace(){// console.log(\"lowercase is clicked\" + {text} ) ;\nvar newText1=prompt(\"enter text you want to replace\");var newText2=prompt(\"enter new text you want to replace with\");var newText=text.replaceAll(newText1,newText2);setText(newText);props.showAlert(\"Replaced all occurances\",\"success\");};var handleCopy=function handleCopy(){// console.log(\"lowercase is clicked\" + {text} ) ;\nvar newText=document.getElementById(\"mb1\");newText.select();navigator.clipboard.writeText(newText.value);props.showAlert(\"Copied \",\"success\");};var handleRemove=function handleRemove(){var newText=text.split(/[ ]+/);setText(newText.join(\" \"));props.showAlert(\"Removed extra spaces\",\"success\");};var handleOnChange=function handleOnChange(event){console.log(\"onchange\");setText(event.target.value);};var _useState=useState(''),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];//text STATE variable conatain enter text value fun is setText to update\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"conatiner\",style:{color:props.mode==='light'?'black':'white'},children:[/*#__PURE__*/_jsxs(\"h2\",{children:[props.heading,\" \"]}),/*#__PURE__*/_jsx(\"div\",{className:\"mb-3\",children:/*#__PURE__*/_jsx(\"textarea\",{className:\"form-control\",value:text,onChange:handleOnChange,id:\"mb1\",rows:\"8\",style:{backgroundColor:props.mode==='light'?'white':'grey'||'red',color:props.mode==='light'?'black':'white'}})}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary mx-2\",onClick:handleUpClick,children:\"Convert to uppercase\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary mx-2\",onClick:handleLoClick,children:\"Convert to lowercase\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary mx-2\",onClick:handleClearClick,children:\"Clear\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary mx-2\",onClick:handleReplace,children:\"Replace\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary mx-2\",onClick:handleCopy,children:\"Copy-Text\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary mx-2\",onClick:handleRemove,children:\"Remove-Extra-Spaces\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"conatiner my-3\",style:{color:props.mode==='light'?'black':'white'},children:[/*#__PURE__*/_jsxs(\"p\",{children:[text.split(\" \").length-1,\" \",/*#__PURE__*/_jsx(\"b\",{children:\"Words\"}),\", \",text.length,\" \",/*#__PURE__*/_jsx(\"b\",{children:\"Characters\"})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Reading Time \"}),/*#__PURE__*/_jsxs(\"p\",{children:[0.008*text.split(\" \").length,\" Minute time\"]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Preview your Text \"}),/*#__PURE__*/_jsx(\"p\",{children:text.length>0?text:'Write something in the box to preview'})]})]});}//situation of component content as avariable after performing actions updated  the state\n//hook:help you in using features of class without making class just import hook usestate from react\n//useState return settext","map":{"version":3,"names":["React","useState","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","TextForm","props","handleUpClick","newText","text","toUpperCase","setText","showAlert","handleLoClick","toLowerCase","handleClearClick","handleReplace","newText1","prompt","newText2","replaceAll","handleCopy","document","getElementById","select","navigator","clipboard","writeText","value","handleRemove","split","join","handleOnChange","event","console","log","target","_useState","_useState2","_slicedToArray","children","className","style","color","mode","heading","onChange","id","rows","backgroundColor","onClick","length"],"sources":["C:/Users/ICT/myreactapp/yourfirstapp/src/compponents/TextForm.js"],"sourcesContent":["import React ,{useState} from 'react' \r\nexport default function TextForm(props) \r\n{\r\n    const handleUpClick=()=>\r\n    {\r\n    // console.log(\"uppercase is clicked\" + {text} ) ;\r\n     let newText=text.toUpperCase();\r\n     setText(newText)\r\n     props.showAlert(\"Converted to Uppercase\" , \"success\");\r\n    }\r\n  \r\n    const handleLoClick=()=>\r\n    {\r\n    // console.log(\"lowercase is clicked\" + {text} ) ;\r\n     let newText=text.toLowerCase();\r\n     setText(newText)  \r\n     props.showAlert(\"Converted to Lowercase\" , \"success\");\r\n    }\r\n    const handleClearClick=()=>\r\n    {\r\n    // console.log(\"lowercase is clicked\" + {text} ) ;\r\n     let newText=(\" \");\r\n     setText(newText)\r\n     props.showAlert(\"Screen cleared\" , \"success\");\r\n    }\r\n    const handleReplace=()=>\r\n    {\r\n    // console.log(\"lowercase is clicked\" + {text} ) ;\r\n     let newText1= prompt(\"enter text you want to replace\");\r\n     let newText2=prompt(\"enter new text you want to replace with\")\r\n     let newText= text.replaceAll( newText1,newText2);\r\n  \r\n     setText(newText)\r\n     props.showAlert(\"Replaced all occurances\" , \"success\");\r\n    }\r\n    const handleCopy=()=>\r\n    {\r\n    // console.log(\"lowercase is clicked\" + {text} ) ;\r\n     let newText = document.getElementById(\"mb1\");\r\n     newText.select();\r\n    navigator.clipboard.writeText(newText.value);\r\n    props.showAlert(\"Copied \" , \"success\");\r\n    }\r\n\r\n    const handleRemove=()=>\r\n    {\r\nlet newText=text.split(/[ ]+/);\r\nsetText(newText.join(\" \"))\r\nprops.showAlert(\"Removed extra spaces\" , \"success\");\r\n    }\r\n    const handleOnChange=(event)=>\r\n    {\r\n     console.log(\"onchange\")\r\n     setText(event.target.value)\r\n    }\r\n    const [text,setText]=useState('');\r\n    //text STATE variable conatain enter text value fun is setText to update\r\n\r\n  return (\r\n    <>\r\n\r\n  <div className=\"conatiner\" style={{color:props.mode==='light'? 'black' : 'white'} } >\r\n  <h2 >{props.heading} </h2>\r\n  \r\n\r\n  <div className=\"mb-3\">\r\n  <textarea className=\"form-control\"  value={text} onChange={handleOnChange} id=\"mb1\" rows=\"8\"style={{backgroundColor:props.mode==='light' ? 'white' : 'grey' ||'red', color:props.mode==='light'? 'black' : 'white' }} ></textarea>\r\n  </div>\r\n  <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to uppercase</button>\r\n  <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to lowercase</button>\r\n  <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear</button>\r\n  <button className=\"btn btn-primary mx-2\" onClick={handleReplace}>Replace</button>\r\n  <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy-Text</button>\r\n  <button className=\"btn btn-primary mx-2\" onClick={handleRemove}>Remove-Extra-Spaces</button>\r\n  </div>\r\n\r\n  <div className=\"conatiner my-3\" style={{color:props.mode==='light'? 'black' : 'white'}} >\r\n    <p>{text.split(\" \").length-1} <b>Words</b>, {text.length} <b>Characters</b></p>\r\n    <h3>Reading Time </h3>\r\n    <p>{0.008*text.split(\" \").length} Minute time</p>\r\n    <h3>Preview your Text </h3>\r\n    <p>{text.length>0 ? text : 'Write something in the box to preview'}</p>\r\n    </div>\r\n\r\n \r\n \r\n   </>\r\n  )\r\n}\r\n//situation of component content as avariable after performing actions updated  the state\r\n//hook:help you in using features of class without making class just import hook usestate from react\r\n//useState return settext"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}