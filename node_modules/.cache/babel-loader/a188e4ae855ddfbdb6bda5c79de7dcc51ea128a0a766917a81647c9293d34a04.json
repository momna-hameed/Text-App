{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ICT\\\\myreactapp\\\\yourfirstapp\\\\src\\\\compponents\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const handleUpClick = () => {\n    console.log(\"uppercase is clicked\" + {\n      text\n    });\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n  const handleOnChange = event => {\n    console.log(\"onchange\");\n    setText(event.target.value);\n  };\n  const [text, setText] = useState('enter your text');\n  //text STATE variable conatain enter text value fun is setText to update\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [props.heading, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: handleOnChange,\n          id: \"mb1\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleUpClick,\n        children: \"Convert to upercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conatiner my-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [text.split(\" \").length, \" Words, \", text.length, \" Characters\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [0.0008 * text.split(\" \").length, \" Minute time\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Preview your Text \", text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n//situation of component content as avariable after performing actions updated  the state\n//hook:help you in using features of class without making class just import hook usestate from react\n//useState return settext\n_s(TextForm, \"4eNa+U320Nz4967ipjHMCHR/YUw=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","handleUpClick","console","log","text","newText","toUpperCase","setText","handleOnChange","event","target","value","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","id","rows","onClick","split","length","_c","$RefreshReg$"],"sources":["C:/Users/ICT/myreactapp/yourfirstapp/src/compponents/TextForm.js"],"sourcesContent":["import React ,{useState} from 'react' \r\nexport default function TextForm(props) \r\n{\r\n    const handleUpClick=()=>\r\n    {\r\n     console.log(\"uppercase is clicked\" + {text} ) ;\r\n     let newText=text.toUpperCase();\r\n     setText(newText)\r\n    }\r\n    const handleOnChange=(event)=>\r\n    {\r\n     console.log(\"onchange\")\r\n     setText(event.target.value)\r\n    }\r\n    const [text,setText]=useState('enter your text');\r\n    //text STATE variable conatain enter text value fun is setText to update\r\n\r\n  return (\r\n    <>\r\n  <div>\r\n  <h2>{props.heading} </h2>\r\n  <div className=\"mb-3\">\r\n  <textarea className=\"form-control\"  value={text} onChange={handleOnChange} id=\"mb1\" rows=\"8\"></textarea>\r\n  </div>\r\n  <button className=\"btn btn-primary\" onClick={handleUpClick}>Convert to upercase</button>\r\n  <div className=\"conatiner my-3\">\r\n    <h3>{text.split(\" \").length} Words, {text.length} Characters</h3>\r\n    <h3>{0.0008*text.split(\" \").length} Minute time</h3>\r\n    <h3>Preview your Text {text}</h3>\r\n\r\n \r\n  </div>\r\n  </div>\r\n  </>\r\n  )\r\n}\r\n//situation of component content as avariable after performing actions updated  the state\r\n//hook:help you in using features of class without making class just import hook usestate from react\r\n//useState return settext"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACrC,eAAe,SAASC,QAAQA,CAACC,KAAK,EACtC;EAAAC,EAAA;EACI,MAAMC,aAAa,GAACA,CAAA,KACpB;IACCC,OAAO,CAACC,GAAG,CAAC,sBAAsB,GAAG;MAACC;IAAI,CAAE,CAAC;IAC7C,IAAIC,OAAO,GAACD,IAAI,CAACE,WAAW,CAAC,CAAC;IAC9BC,OAAO,CAACF,OAAO,CAAC;EACjB,CAAC;EACD,MAAMG,cAAc,GAAEC,KAAK,IAC3B;IACCP,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACvBI,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EACD,MAAM,CAACP,IAAI,EAACG,OAAO,CAAC,GAACd,QAAQ,CAAC,iBAAiB,CAAC;EAChD;;EAEF,oBACEE,OAAA,CAAAE,SAAA;IAAAe,QAAA,eACFjB,OAAA;MAAAiB,QAAA,gBACAjB,OAAA;QAAAiB,QAAA,GAAKb,KAAK,CAACc,OAAO,EAAC,GAAC;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBtB,OAAA;QAAKuB,SAAS,EAAC,MAAM;QAAAN,QAAA,eACrBjB,OAAA;UAAUuB,SAAS,EAAC,cAAc;UAAEP,KAAK,EAAEP,IAAK;UAACe,QAAQ,EAAEX,cAAe;UAACY,EAAE,EAAC,KAAK;UAACC,IAAI,EAAC;QAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnG,CAAC,eACNtB,OAAA;QAAQuB,SAAS,EAAC,iBAAiB;QAACI,OAAO,EAAErB,aAAc;QAAAW,QAAA,EAAC;MAAmB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxFtB,OAAA;QAAKuB,SAAS,EAAC,gBAAgB;QAAAN,QAAA,gBAC7BjB,OAAA;UAAAiB,QAAA,GAAKR,IAAI,CAACmB,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,EAAC,UAAQ,EAACpB,IAAI,CAACoB,MAAM,EAAC,aAAW;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjEtB,OAAA;UAAAiB,QAAA,GAAK,MAAM,GAACR,IAAI,CAACmB,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,EAAC,cAAY;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpDtB,OAAA;UAAAiB,QAAA,GAAI,oBAAkB,EAACR,IAAI;QAAA;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAG9B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC,gBACJ,CAAC;AAEL;AACA;AACA;AACA;AAAAjB,EAAA,CArCwBF,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}