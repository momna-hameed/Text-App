{"ast":null,"code":"import _slicedToArray from\"C:/Users/ICT/myreactapp/yourfirstapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import'./App.css';//import About from './compponents/About';\nimport Navbar from'./compponents/Navbar';import TextForm from'./compponents/TextForm';import React,{useState}from'react';import Alert from'./compponents/Alert';/*import {\n  BrowserRouter ,\n  Route,\n  Routes\n} from \"react-router-dom\";\n*/import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState('light'),_useState2=_slicedToArray(_useState,2),mode=_useState2[0],setMode=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),alert=_useState4[0],setAlert=_useState4[1];var toggleRed=function toggleRed(){if(mode==='light'){setMode('red');document.body.style.backgroundColor='red';showAlert(\"red mode has been enabled\",\"success\");}else{setMode('light');document.body.style.backgroundColor='white';showAlert(\"light mode has been enabled\",\"success\");}};var toggleBrown=function toggleBrown(){if(mode==='light'){setMode('brown');document.body.style.backgroundColor='brown';showAlert(\"green mode has been enabled\",\"success\");}else{setMode('light');document.body.style.backgroundColor='white';showAlert(\"light mode has been enabled\",\"success\");}};var showAlert=function showAlert(message,type){// alert as an object\nsetAlert({msg:message,type:type});setTimeout(function(){setAlert(null);},1500);};var toggleMode=function toggleMode(){if(mode==='light'){setMode('dark');document.body.style.backgroundColor='rgb(38 38 39)';showAlert(\"dark mode has been enabled\",\"success\");}else{setMode('light');document.body.style.backgroundColor='white';showAlert(\"light mode has been enabled\",\"success\");}};//state variable whether dark mode is enabled or not*/\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{title:\"Text-Editor\",mode:mode,toggleMode:toggleMode,toggleRed:toggleRed,toggleBrown:toggleBrown}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(TextForm,{showAlert:showAlert,heading:\"Enter text to Analyze below\",mode:mode})})]});}export default App;//import PropTypes\n// props as argument\n//props.variable\n//prop as an object\n//default prop\n// manage state in app.js\n//1- make a new state in app.js value='dark'\n//2- pass proptype value mode={mode} into navbar\n//if dark mode enable=true Dark\n//so convert string into template literals\n// switch in navbae to control light mode or dark mode\n//change color of enable dark mode : fun  toggle mode={toggle mode}\n//toggle fun run when someone turn on switch","map":{"version":3,"names":["Navbar","TextForm","React","useState","Alert","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","mode","setMode","_useState3","_useState4","alert","setAlert","toggleRed","document","body","style","backgroundColor","showAlert","toggleBrown","message","type","msg","setTimeout","toggleMode","children","title","className","heading"],"sources":["C:/Users/ICT/myreactapp/yourfirstapp/src/App.js"],"sourcesContent":["\nimport './App.css';\n//import About from './compponents/About';\nimport Navbar from './compponents/Navbar';\nimport TextForm from './compponents/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './compponents/Alert';\n/*import {\n  BrowserRouter ,\n  Route,\n  Routes\n} from \"react-router-dom\";\n*/\n\nfunction App() {\n  const [mode,setMode]=useState('light');\n\n  const[alert , setAlert]=useState(null);\n\n  \n  const toggleRed=()=>\n  {\n    if(mode==='light')\n    {\n      setMode('red');\n      document.body.style.backgroundColor='red';\n      showAlert(\"red mode has been enabled\", \"success\");\n\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor='white';\n      showAlert(\"light mode has been enabled\", \"success\");\n\n    }\n  }\n\n  const toggleBrown=()=>\n  {\n    if(mode==='light')\n    {\n      setMode('brown');\n      document.body.style.backgroundColor='brown';\n      showAlert(\"green mode has been enabled\", \"success\");\n\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor='white';\n      showAlert(\"light mode has been enabled\", \"success\");\n      \n\n    }\n  }\n  const showAlert=(message, type)=>\n  {\n    // alert as an object\n    setAlert(\n      {\n        msg: message,\n        type:type\n      }\n    )\n    setTimeout(()=>\n    {\nsetAlert(null);\n    },1500);\n  }\n  const toggleMode=()=>\n  {\n    if(mode==='light')\n    {\n      \n      setMode('dark');\n      document.body.style.backgroundColor='rgb(38 38 39)';\n      showAlert(\"dark mode has been enabled\", \"success\");\n    }\n\n    else\n    {\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"light mode has been enabled\" , \"success\");\n    }\n\n  }\n\n  //state variable whether dark mode is enabled or not*/\n  return (\n<>\n{/*<BrowserRouter>*/}\n <Navbar title=\"Text-Editor\" mode={mode}  toggleMode={toggleMode} toggleRed={toggleRed} toggleBrown={toggleBrown}/>\n <Alert alert={alert}/>\n<div className=\"container\">\n{/*<Routes>\n      <Route exact path=\"/about\" element={\n      <About mode={mode}/>*/}\n     { /* }></Route>\n\n    <Route  exact path=\"/\" element={*/}\n      <TextForm showAlert={showAlert} heading= \"Enter text to Analyze below\" mode={mode} />\n     {/* }>\n      </Route>\n\n  </Routes></>*/}\n</div>\n{/*</BrowserRouter>*/}\n </>\n  );\n\n  \n}\n\nexport default App;\n\n//import PropTypes\n// props as argument\n//props.variable\n//prop as an object\n//default prop\n\n// manage state in app.js\n//1- make a new state in app.js value='dark'\n//2- pass proptype value mode={mode} into navbar\n//if dark mode enable=true Dark\n//so convert string into template literals\n// switch in navbae to control light mode or dark mode\n//change color of enable dark mode : fun  toggle mode={toggle mode}\n//toggle fun run when someone turn on switch"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}