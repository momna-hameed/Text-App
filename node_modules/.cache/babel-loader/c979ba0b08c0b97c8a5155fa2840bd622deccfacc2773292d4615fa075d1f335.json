{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ICT\\\\myreactapp\\\\yourfirstapp\\\\src\\\\App.js\";\nimport './App.css';\n//import About from './compponents/About';\n//import Navbar from './compponents/Navbar';\n//import TextForm from './compponents/TextForm';\n//import React, { useState } from 'react';\nimport NavBar1 from './compponents/NavBar1';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  /*const [mode,setMode]=useState('light');\n  const toggleMode=()=>\n  {\n    if(mode==='light')\n    {\n      \n      setMode('dark');\n      document.body.style.backgroundColor='#040118';\n    }\n    else\n    {\n      setMode('light');\n      document.body.style.backgroundColor='white';\n    }\n   }\n  //state variable whether dark mode is enabled or not*/\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conatiner\",\n    children: /*#__PURE__*/_jsxDEV(NavBar1, {\n      title: \"Resume\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this)\n  /* <><Navbar title=\"Text-Editor\" mode={mode} toggleMode={toggleMode}/>-\n  <div className=\"container\">\n  <TextForm heading= \"Enter text to Analyze below\" mode={mode} />\n  </div>\n  <div className=\"container\">\n  <About mode={mode}/>\n  </div>\n  </>\n  */;\n}\n_c = App;\nexport default App;\n\n//import PropTypes\n// props as argument\n//props.variable\n//prop as an object\n//default prop\n\n// manage state in app.js\n//1- make a new state in app.js value='dark'\n//2- pass proptype value mode={mode} into navbar\n//if dark mode enable=true Dark\n//so convert string into template literals\n// switch in navbae to control light mode or dark mode\n//change color of enable dark mode : fun  toggle mode={toggle mode}\n//toggle fun run when someone turn on switch\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["NavBar1","jsxDEV","_jsxDEV","App","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ICT/myreactapp/yourfirstapp/src/App.js"],"sourcesContent":["\nimport './App.css';\n//import About from './compponents/About';\n//import Navbar from './compponents/Navbar';\n//import TextForm from './compponents/TextForm';\n//import React, { useState } from 'react';\nimport NavBar1 from './compponents/NavBar1';\nfunction App() {\n  /*const [mode,setMode]=useState('light');\n  const toggleMode=()=>\n  {\n    if(mode==='light')\n    {\n      \n      setMode('dark');\n      document.body.style.backgroundColor='#040118';\n    }\n    else\n    {\n      setMode('light');\n      document.body.style.backgroundColor='white';\n    }\n\n  }\n  //state variable whether dark mode is enabled or not*/\n  return (\n   \n    <div className='conatiner'>\n    < NavBar1 title=\"Resume\" />\n   </div>\n    /* <><Navbar title=\"Text-Editor\" mode={mode} toggleMode={toggleMode}/>-\n<div className=\"container\">\n<TextForm heading= \"Enter text to Analyze below\" mode={mode} />\n</div>\n<div className=\"container\">\n<About mode={mode}/>\n</div>\n </>\n  */\n \n  );\n\n  \n}\n\nexport default App;\n\n//import PropTypes\n// props as argument\n//props.variable\n//prop as an object\n//default prop\n\n// manage state in app.js\n//1- make a new state in app.js value='dark'\n//2- pass proptype value mode={mode} into navbar\n//if dark mode enable=true Dark\n//so convert string into template literals\n// switch in navbae to control light mode or dark mode\n//change color of enable dark mode : fun  toggle mode={toggle mode}\n//toggle fun run when someone turn on switch"],"mappings":";AACA,OAAO,WAAW;AAClB;AACA;AACA;AACA;AACA,OAAOA,OAAO,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5C,SAASC,GAAGA,CAAA,EAAG;EACb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEE,oBAEED,OAAA;IAAKE,SAAS,EAAC,WAAW;IAAAC,QAAA,eAC1BH,OAAA,CAAEF,OAAO;MAACM,KAAK,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB;EACJ;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IARI;AAaJ;AAACC,EAAA,GApCQR,GAAG;AAsCZ,eAAeA,GAAG;;AAElB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}