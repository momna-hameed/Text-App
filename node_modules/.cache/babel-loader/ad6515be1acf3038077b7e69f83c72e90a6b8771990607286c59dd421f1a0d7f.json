{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ICT\\\\myreactapp\\\\yourfirstapp\\\\src\\\\compponents\\\\TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const handleUpClick = () => {\n    // console.log(\"uppercase is clicked\" + {text} ) ;\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n  const handleLoClick = () => {\n    // console.log(\"lowercase is clicked\" + {text} ) ;\n    let newText = text.toLowerCase();\n    setText(newText);\n  };\n  const handleClearClick = () => {\n    // console.log(\"lowercase is clicked\" + {text} ) ;\n    let newText = \" \";\n    setText(newText);\n  };\n  const handleReplace = () => {\n    // console.log(\"lowercase is clicked\" + {text} ) ;\n    let newText1 = prompt(\"enter text you want to replace\");\n    let newText2 = prompt(\"enter new text you want to replace with\");\n    let result;\n    forEach(element => {\n      result = text + newText2.replace(newText1);\n    });\n    setText(result);\n  };\n  const handleOnChange = event => {\n    console.log(\"onchange\");\n    setText(event.target.value);\n  };\n  const [text, setText] = useState('');\n  //text STATE variable conatain enter text value fun is setText to update\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [props.heading, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: handleOnChange,\n          id: \"mb1\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleUpClick,\n        children: \"Convert to uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleLoClick,\n        children: \"Convert to lowercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleClearClick,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleReplace,\n        children: \"Replace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conatiner my-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [text.split(\" \").length, \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Words\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this), \", \", text.length, \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Characters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 61\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Reading Time \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [0.008 * text.split(\" \").length, \" Minute time\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Preview your Text \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n//situation of component content as avariable after performing actions updated  the state\n//hook:help you in using features of class without making class just import hook usestate from react\n//useState return settext\n_s(TextForm, \"Kt/yo4ZcRlSRxcmAcKAou8CnBS0=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","handleUpClick","newText","text","toUpperCase","setText","handleLoClick","toLowerCase","handleClearClick","handleReplace","newText1","prompt","newText2","result","forEach","element","replace","handleOnChange","event","console","log","target","value","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","id","rows","onClick","split","length","_c","$RefreshReg$"],"sources":["C:/Users/ICT/myreactapp/yourfirstapp/src/compponents/TextForm.js"],"sourcesContent":["import React ,{useState} from 'react' \r\nexport default function TextForm(props) \r\n{\r\n    const handleUpClick=()=>\r\n    {\r\n    // console.log(\"uppercase is clicked\" + {text} ) ;\r\n     let newText=text.toUpperCase();\r\n     setText(newText)\r\n    }\r\n  \r\n    const handleLoClick=()=>\r\n    {\r\n    // console.log(\"lowercase is clicked\" + {text} ) ;\r\n     let newText=text.toLowerCase();\r\n     setText(newText)\r\n    }\r\n    const handleClearClick=()=>\r\n    {\r\n    // console.log(\"lowercase is clicked\" + {text} ) ;\r\n     let newText=(\" \");\r\n     setText(newText)\r\n    }\r\n    const handleReplace=()=>\r\n    {\r\n    // console.log(\"lowercase is clicked\" + {text} ) ;\r\n     let newText1= prompt(\"enter text you want to replace\");\r\n     let newText2=prompt(\"enter new text you want to replace with\")\r\n     let result;\r\n     forEach(element => {\r\n         result= text + newText2.replace(newText1);\r\n     });\r\n\r\n     setText(result)\r\n    }\r\n    const handleOnChange=(event)=>\r\n    {\r\n     console.log(\"onchange\")\r\n     setText(event.target.value)\r\n    }\r\n    const [text,setText]=useState('');\r\n    //text STATE variable conatain enter text value fun is setText to update\r\n\r\n  return (\r\n    <>\r\n  <div>\r\n  <h2>{props.heading} </h2>\r\n  <div className=\"mb-3\">\r\n  <textarea className=\"form-control\"  value={text} onChange={handleOnChange} id=\"mb1\" rows=\"8\"></textarea>\r\n  </div>\r\n  <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to uppercase</button>\r\n  <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to lowercase</button>\r\n  <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear</button>\r\n  <button className=\"btn btn-primary mx-2\" onClick={handleReplace}>Replace</button>\r\n  <div className=\"conatiner my-3\">\r\n    <p>{text.split(\" \").length} <b>Words</b>, {text.length} <b>Characters</b></p>\r\n    <h3>Reading Time </h3>\r\n    <p>{0.008*text.split(\" \").length} Minute time</p>\r\n    <div className=\"mb-3\">\r\n    <h3>Preview your Text </h3>\r\n    <p>{text}</p>\r\n    </div>\r\n\r\n \r\n  </div>\r\n  </div>\r\n  </>\r\n  )\r\n}\r\n//situation of component content as avariable after performing actions updated  the state\r\n//hook:help you in using features of class without making class just import hook usestate from react\r\n//useState return settext"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}